{"version":3,"sources":["common/c2-SuperButton/SuperButton.module.css","common/c3-SuperCheckbox/SuperCheckbox.module.css","common/c5-SuperSelect/SuperSelect.module.css","common/c6-SuperRadio/SuperRadio.module.css","components/header/Header.module.css","components/login/Login.tsx","components/registration/Registration.tsx","components/profile/Profile.tsx","components/recoveryPassword/RecoveryPassword.tsx","components/newPassword/NewPassword.tsx","components/error404/Error404.tsx","common/c1-SuperInputText/SuperInputText.tsx","common/c2-SuperButton/SuperButton.tsx","common/c3-SuperCheckbox/SuperCheckbox.tsx","common/c5-SuperSelect/SuperSelect.tsx","common/c6-SuperRadio/SuperRadio.tsx","components/superComponents/SuperComponents.tsx","routes/RoutesComponent.tsx","components/header/Header.tsx","App.tsx","reportWebVitals.ts","bll/app-reducer.ts","bll/store.ts","index.tsx","common/c1-SuperInputText/SuperInputText.module.css"],"names":["module","exports","Login","Registration","Profile","RecoveryPassword","NewPassword","Error404","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","select","SuperRadio","name","onChangeCallback","label","radio","SuperComponents","style","display","flexDirection","width","RoutesComponent","path","element","Header","headerCont","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","app","state","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b966c5f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2lhkz\",\"red\":\"SuperButton_red__2ZIfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3a_QU\",\"spanClassName\":\"SuperCheckbox_spanClassName__3zQFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__3HMNx\",\"option\":\"SuperSelect_option__1FDwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__36kuQ\",\"label\":\"SuperRadio_label__R-PEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerCont\":\"Header_headerCont__1bpC_\"};","import React from \"react\";\r\n\r\nexport const Login = () => {\r\n  return (\r\n      <>\r\n          Login\r\n      </>\r\n  )\r\n}","import React from \"react\";\r\n\r\nexport const Registration = () => {\r\n    return (\r\n        <>\r\n            Registration\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <>\r\n            Profile\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const RecoveryPassword = () => {\r\n    return (\r\n        <>\r\n            RecoveryPassword\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <>\r\n            NewPassword\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <>\r\n            Error404\r\n        </>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange \r\n        && onChange(e)\r\n\r\n        onChangeChecked  // если есть пропс onChange\r\n        && onChangeChecked(e.currentTarget.checked) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './SuperSelect.module.css'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <option className={s.option} key={i} value={o}>{o}</option>\r\n    )) : [];\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.css'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label className={s.label} key={i}>\r\n            <input\r\n                className={s.radio}\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n                // name, checked, value, onChange\r\n\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React from \"react\";\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../common/c6-SuperRadio/SuperRadio\";\r\n\r\nexport const SuperComponents = () => {\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'column', width: '100px'}}>\r\n            <SuperInputText/>\r\n            <SuperButton>Click</SuperButton>\r\n            <SuperCheckbox/>\r\n          {/*  <SuperEditableSpan onChangeText={''}/>*/}\r\n            <SuperSelect/>\r\n            <SuperRadio/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {Login} from \"../components/login/Login\";\r\nimport {Registration} from \"../components/registration/Registration\";\r\nimport {Profile} from \"../components/profile/Profile\";\r\nimport {RecoveryPassword} from \"../components/recoveryPassword/RecoveryPassword\";\r\nimport {NewPassword} from \"../components/newPassword/NewPassword\";\r\nimport {Error404} from \"../components/error404/Error404\";\r\nimport {SuperComponents} from \"../components/superComponents/SuperComponents\";\r\nimport App from \"../App\";\r\n\r\nexport const RoutesComponent = () => {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path='/' element={<Profile/>}/>\r\n                <Route path='/login' element={<Login/>}/>\r\n                <Route path='/registration' element={<Registration/>}/>\r\n                <Route path='/profile' element={<Profile/>}/>\r\n                <Route path='/recoveryPassword' element={<RecoveryPassword/>}/>\r\n                <Route path='/newPassword' element={<NewPassword/>}/>\r\n                <Route path='/superComponents' element={<SuperComponents/>}/>\r\n                <Route path={'*'} element={<Error404/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.headerCont}>\r\n\r\n            <div>\r\n                <NavLink to={'/login'}>Login</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={'/registration'}>registration</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={'/profile'}>profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={'/recoveryPassword'}>recoveryPassword</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={'/newPassword'}>newPassword</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={'/error404'}>error404</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={'/superComponents'}>superComponents</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {RoutesComponent} from \"./routes/RoutesComponent\";\nimport {Header} from \"./components/header/Header\";\n\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Header/>\n        <RoutesComponent/>\n      </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\ntype ActionTypes = ReturnType<typeof newAC>\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n  switch (action.type) {\r\n      case \"NEW\":\r\n          return {state}\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nexport const newAC = () => {\r\n  return {\r\n      type: 'NEW'\r\n  }\r\n}","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2b5Jp\",\"superInput\":\"SuperInputText_superInput__A0pSh\",\"errorInput\":\"SuperInputText_errorInput__2nmGi\",\"error\":\"SuperInputText_error__1bDtc\"};"],"sourceRoot":""}